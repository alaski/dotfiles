set nocompatible               " be iMproved
filetype off                   " required!

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle
" required! 
Plugin 'VundleVim/Vundle.vim'

" My Plugins here:
"
" original repos on github
Plugin 'scrooloose/syntastic'
Plugin 'msanders/snipmate.vim'
Plugin 'fholgado/minibufexpl.vim'
Plugin 'tpope/vim-fugitive.git'
Plugin 'majutsushi/tagbar'
" vim-scripts repos
Plugin 'xterm16.vim'
Plugin 'vividchalk.vim'

call vundle#end()         " required
filetype plugin indent on " required
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
"
au VimEnter *
       \ if &term == 'xterm'  |
       \         set t_Co=256 |
       \ endif

" let xterm16_brightness='default' " Change if needed
let xterm16_colormap='soft'   " Change if needed
colo xterm16

" -----------------------------------------------------------------------------
" Color Column (only on insert)
" -----------------------------------------------------------------------------
if exists("&colorcolumn")
    autocmd InsertEnter * set colorcolumn=80
    autocmd InsertLeave * set colorcolumn=""
    " colo xterm16 prevents this from working, set it in the colorscheme
    " highlight ColorColumn ctermbg=grey
endif

set expandtab
set backspace=2
set tabstop=4
set shiftwidth=4
set softtabstop=4
syntax on
set modeline
set foldmethod=marker
set foldlevelstart=99
"set nowrap
set showcmd
set ruler
set title
set scrolloff=3
"set textwidth=80
set viminfo='10,\"100

" Included for those systems that don't have them set
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

"for case-smart searching
"case sensitive only if Capital present
set ignorecase
set smartcase

let mapleader = ","

inoremap jj <ESC>

nmap <F8> :TagbarToggle<CR>

" Use Q for formatting the current paragraph or selection
vmap Q gq
nmap Q gqap

" Easier window navigation
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

"set showmatch
"set matchtime=5

"set background=dark
set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%)
"set statusline+=%{SyntasticStatuslineFlag()}

set wildmode=list:longest
set wildignore=*.swp,*.pyc
highlight Folded term=bold ctermbg=black ctermfg=white

let g:syntastic_check_on_open = 1
"let g:syntastic_enable_signs = 0
let g:syntastic_python_checker_args='--ignore=E12 --builtins=_'
let g:syntastic_stl_format = '[%E{Err: %fe #%e}%B{, }%W{Warn: %fw #%w}]'
"Less ugliness, courtesy of icgood
highlight SignColumn ctermbg=darkgrey

let g:miniBufExplMapWindowNavVim = 1
let g:miniBufExplMapWindowNavArrows = 1
let g:miniBufExplMapCTabSwitchBufs = 1
let g:miniBufExplModSelTarget = 1

" :r!which google-chrome
" :r!which ghc
" let g:haddock_browser = "/usr/bin/google-chrome"
" let g:ghc = "/usr/bin/ghc"
" au BufEnter *.hs compiler ghc

" Set the modeline for python files to keep whitespace consistent
" :autocmd BufNewFile *.py r ~/.vim/skeleton.py
" :autocmd BufNewFile *.py 1

"au FileType python set omnifunc=pythoncomplete#Complete
"set completeopt=menuone,longest,preview

" Add the virtualenv's site-packages to vim path
" Requires python scripting support in vim
py << EOF
import os.path
import sys
import vim
if 'VIRTUAL_ENV' in os.environ:
	project_base_dir = os.environ['VIRTUAL_ENV']
	sys.path.insert(0, project_base_dir)
	activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
	execfile(activate_this, dict(__file__=activate_this))
EOF

augroup ruby
    au!
    au filetype ruby,eruby set ts=2 sw=2 sts=2
augroup END

augroup web
    au!
    au filetype html,css,scss,yaml set ts=2 sw=2 sts=2
augroup END

au BufRead,BufNewFile *.go set filetype=go

" Some tricks for mutt
augroup MUTT
    au BufRead ~/.mutt/temp/mutt* set spell " << vim 7 required
    au BufRead ~/.mutt/temp/mutt* set tw=72
    au BufRead ~/.mutt/temp/mutt* set fo+=w
    au BufRead ~/.mutt/temp/mutt* set noai
    au BufRead ~/.mutt/temp/mutt* setfiletype mail
augroup END
